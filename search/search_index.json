{"config":{"lang":["ja"],"separator":"[\\s\\-\u3000\u3001\u3002\uff0c\uff0e]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to discord.ext.help docs!","text":"<p>A discord.py extension that automatically generates interaction help commands.</p>"},{"location":"#dependency","title":"Dependency","text":"<ul> <li>Defxult/reactionmenu</li> <li>discord.py 2.0 and later </li> </ul> <p>This library is not guaranteed to be compatible with the discord.py fork (Because the reactionmenu used in this library is probably dedicated to discord.py).</p> <p>Also, for pycord, you can reproduce the behavior of this library by using <code>discord.ext.pages</code>.</p>"},{"location":"#how-to-use","title":"How To Use","text":""},{"location":"#install","title":"Install","text":"<pre><code>pip install discord-ext-help\n</code></pre>"},{"location":"#example","title":"example","text":"<pre><code>import discord\nfrom discord.ext import commands\nfrom discord_ext_help.help import extension as helpext\n\nbot = commands.Bot(command_prefix=\"!\", intents=discord.Intents.all())\ndeh = helpext(bot)\n\n@bot.event\nasync def setup_hook():\n    command = await bot.tree.sync()\n    await deh.regist_ids(command)\n\n@bot.tree.command(\n    name=\"help\", description=\"show help\"\n)\nasync def help(interaction: discord.Interaction):\n    await interaction.response.defer()\n    await generate(interaction)\n\nbot.run(token)\n</code></pre>"},{"location":"#legacy","title":"legacy","text":"<p>Migration instructions from the legacy version (0.x) can be found here.</p>"},{"location":"generate-help/","title":"generate help embed","text":"<p>The embed generated by discord.ext.help can be customized to some extent.</p> property name embed_title description_not_found description_not_found_group property description embed title Text displayed if command description not found Text displayed if command group description not found"},{"location":"generate-help/#how-to-customize-embed","title":"how to customize embed","text":"<p>The configuration of discord.ext.help is stored in discord_ext_help.help.extension.config in dict type. The configuration can be customized by changing it. <pre><code>import discord\nfrom discord.ext import commands\nfrom discord_ext_help.help import extension as helpext\n\nbot = commands.Bot(command_prefix=\"!\", intents=discord.Intents.all())\ndeh = helpext(bot)\n+ deh.config[\"property name\"] = \"property value\"\n\n@bot.event\nasync def setup_hook():\n    command = await bot.tree.sync()\n    await deh.regist_ids(command)\n\n@bot.tree.command(\n    name=\"help\", description=\"show help\"\n)\nasync def help(interaction: discord.Interaction):\n    await interaction.response.defer()\n    await generate(interaction)\n\nbot.run(token)\n</code></pre></p>"},{"location":"migrate-from-legacy/","title":"Migrate from Legacy Version (0.x)","text":"<p>In 1.0, the specifications have been significantly changed and simplified. <pre><code>import discord\nfrom discord import app_commands\nfrom discord.ext import commands\n- from discord_ext_help import helpExtension, command_list, options\n+ from discord_ext_help.help import extension\n- from reactionmenu import ViewMenu\n\n- command_list.cmdlist = [\n-     {\n-         \"name\": \"/test\",\n-         \"id\": None,\n-         \"description\": \"this is a test command!\",\n-         \"args\": [],\n-         \"example\": \"https://media1.tenor.com/m/m1Tu9iU-zqQAAAAC/wumpus-discord.gif\",\n-     },\n-     {\n-         \"name\": \"/say\",\n-         \"id\": None,\n-         \"description\": \"The character entered in the argument is uttered!\",\n-         \"args\": [\n-             {\n-                 \"name\": \"text\",\n-                 \"description\": None,\n-                 \"required\": True,\n-             }\n-         ],\n-         \"example\": \"https://media1.tenor.com/m/m1Tu9iU-zqQAAAAC/wumpus-discord.gif\",\n-     },\n- ]\n\nbot = commands.Bot(command_prefix=\"!\", intents=discord.Intents.all())\n+ deh = helpext(bot)\n\n@bot.event\nasync def setup_hook():\n-     await bot.tree.sync()\n+     command = await bot.tree.sync()\n+     await deh.regist_ids(command)\n\n@bot.tree.command(\n    name=\"help\", description=\"show help\"\n)\n- @app_commands.choices(command=options.cmds)\n- async def help(interaction: discord.Interaction, command: str = None):\n+ async def help(interaction: discord.Interaction):\n    await interaction.response.defer()\n    await generate(interaction)\n-     res = await helpExtension.response(interaction, command)\n-     menu = res[\"resp\"]\n- \n-     if res[\"type\"] == \"menu\":\n-         await menu.start()\n-         return\n-     await interaction.followup.send(embed=menu)\n\n- helpExtension.setup()\nbot.run(token)\n</code></pre></p>"},{"location":"migrate-from-legacy/#difference-from-0x","title":"Difference from 0.x","text":"<ul> <li>Generation of help using the conventional dictionary has been discontinued and replaced with automatic generation using <code>walk_commands()</code>.</li> </ul> <p>If you want to use conventional code, use <code>discord_ext_help.legacy</code>. (Support is not provided, however.)</p>"}]}